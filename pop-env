#!/usr/bin/env bash

#we use this to get to the script dir, so were going to change directory into bash0(in this case this script) and get the present working dir
script_dir=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd) 
plan="0"
export XDG_CONFIG_HOME="$HOME/.config"

while [[ $# > 0 ]]; do
	if [[ $1 == "plan" ]]; then	
		plan="1"
	fi
	shift #this removes the first arg so whe can proceed whith the rest of them
done

log(){
	if [[ $plan = "1" ]]; then
		echo "[DRY_RUN]: $@" #this means to print everything that was passed to me 
	else
		echo "$@" #print all of them
	fi
}

execute(){
	log "execute $@"
	if [[ $plan = "1" ]]; then
		return #if it is a plan dont execute at all
	fi

	"$@" #else execute everything
}

log "----------------------- fedora-env ------------------------"

#the following part basically copies everything under .config into the local .config
copy_dir() {
	from=$1
	to=$2

	pushd $from > /dev/null
	directories=$(find . -mindepth 1 -maxdepth 1 -type d)
	for dir in $directories; do
		execute rm -rf $to/$dir
		execute cp -r $dir $to/$dir
	done
	popd > /dev/null

}

copy_file() {
	# in this case i dont need push and pop since the origin is a file and the destination is a directory
	from=$1
	to=$2
	filename=$(basename $from) #basename takes the last item in the path (eg: /foo/bar/baz the basename will br baz)

	execute rm $to/$filename #we dont do recursively forced delete if its not a folder right? Because somehow had a file over here but a folder over there you wont destroy everything by accident
	execute cp -r $from $to/$filename
}

copy_dir .config $XDG_CONFIG_HOME
copy_dir .local  $HOME/.local

copy_file .zshrc $HOME
copy_file .zsh_profile $HOME
